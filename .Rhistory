library(usethis)
edit_git_config()
use_git()
use_git()
use_github()
install.packages("rmdformats")
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE,
fig.align = 'center',
results = "asis",
include = TRUE,
out.width = "100%",
knitr.kable.NA = '--',
knitr.table.format = "html"
)
has.videos <-
!evaluate::is.error(try(readxl::read_excel("videos.xlsx", sheet = 1),
silent = TRUE)
)
videos <- readxl::read_excel("videos.xlsx",
sheet = 1,
col_types = c("text"))
for (i in 1:dim(videos)[1]) {
cat('\n\n<!-- -->\n\n')
cat(paste0('# **', videos[i,1], '**'))
cat('\n\n<!-- -->\n\n')
cat(
paste(
'<iframe src="',
videos[i,2],
'" style=\"width:100%; height:600px; border:2px solid black;"></iframe>',
sep = ""
)
)
}
View(videos)
View(videos)
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE,
fig.align = 'center',
results = "asis",
include = TRUE,
out.width = "100%",
knitr.kable.NA = '--',
knitr.table.format = "html"
)
links <- readxl::read_excel("links.xlsx",
sheet = 1,
col_types = c("text"))
for (i in 1:dim(links)[1]) {
cat('\n\n<!-- -->\n\n')
cat(paste0('# **', links[i,1], '**'))
cat('\n\n<!-- -->\n\n')
cat(
paste(
'<iframe src=\"',
links[i,2],
'\" style=\"width:100%; height:400px; border:2px solid black;"></iframe>',
sep = ""
)
)
}
links[i,2]
install.packages("webshot")
paste0(as.character(i), ".png")
as.character(links[i,2])
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE,
fig.align = 'center',
results = "asis",
include = TRUE,
out.width = "100%",
knitr.kable.NA = '--',
knitr.table.format = "html"
)
cat(paste0("![](", getwd(), as.character(i), ".png)"), "\n")
library(usethis)
edit_git_config()
# initialize repository
use_git()
use_git()
use_github()
library(usethis)
use_git()
use_github()
use_git()
use_github()
library(usethis)
git config pull.rebase false
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE,
fig.align = 'center',
results = "asis",
include = TRUE,
out.width = "100%",
knitr.kable.NA = '--',
knitr.table.format = "html"
)
has.questoes <-
!evaluate::is.error(try(match(list.dirs(getwd()), "Questões"),
silent = TRUE))
library(usethis)
use_git()
use_github()
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE,
fig.align = 'center',
results = "asis",
include = TRUE,
out.width = "100%",
knitr.kable.NA = '--',
knitr.table.format = "html"
)
questoes <- list.files(file.path(getwd(), "Questões"), pattern = ".txt")
questoes
questoes <- list.files(file.path(getwd(), "Questões"), pattern = ".txt")
corretas <- list.files(file.path(getwd(), "Corretas"), pattern = ".txt")
respostas <- list.files(file.path(getwd(), "Respostas"), pattern = ".txt")
file.path(getwd(), questoes[1])
read.delim(file.path(getwd(), "Questões", questoes[i]))
read.delim(file.path(getwd(), "Questões", questoes[1]))
read.delim2(file.path(getwd(), "Questões", questoes[i]))
read.delim2(file.path(getwd(), "Questões", questoes[1]))
read.table(file.path(getwd(), "Questões", questoes[1]), header = FALSE)
i = 1
read.table(file.path(getwd(), "Questões", questoes[i]), header = FALSE, sep = "")
readLines(file.path(getwd(), "Questões", questoes[i]))
i = 1
read.table(file.path(getwd(), "Respostas", respostas[i]))
read.delim(file.path(getwd(), "Respostas", respostas[i]))
file.path(getwd(), "Respostas", respostas[i])
read.delim2(file.path(getwd(), "Respostas", respostas[i]))
file.path(getwd(), "Respostas", respostas[i])
read.csv(file.path(getwd(), "Respostas", respostas[i]))
read.table(file.path(getwd(), "Respostas", respostas[i]), header = FALSE)
readLines(file.path(getwd(), "Respostas", respostas[i]))
print(readLines(file.path(getwd(), "Respostas", respostas[i])), quote = FALSE)
print(readLines(file.path(getwd(), "Respostas", respostas[i])), quote = FALSE)
print(readLines(file.path(getwd(), "Respostas", respostas[i])), quote = FALSE)
opcoes <- readLines(file.path(getwd(), "Respostas", respostas[i]))
opcoes <- paste(1:length(opcoes), ") ", opcoes)
opcoes
opcoes <- readLines(file.path(getwd(), "Respostas", respostas[i]))
opcoes <- paste0(1:length(opcoes), ") ", opcoes)
opcoes
opcoes <- paste0(1:length(opcoes), ") ", opcoes, "\n")
opcoes
opcoes <- readLines(file.path(getwd(), "Respostas", respostas[i]))
ocpes
opcoes
strsplit(opcoes)
strsplit(opcoes, split = "\n")
unlist(strsplit(opcoes, split = "\n"))
1:length(opcoes)
opcoes
library(usethis)
use_git()
